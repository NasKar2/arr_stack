services:
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
 #   networks:
 #     - t3_proxy
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DATA_PATH}/prowlarr/:/config
      - ${MEDIA_PATH}:/data  # Use the MEDIA_PATH variable
    ports:
      - 9696:9696
    restart: always 
    
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
  #  networks:
  #    - t3_proxy
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DATA_PATH}/radarr/:/config
      - ${MEDIA_PATH}:/data  # Use the MEDIA_PATH variable
    ports:
      - 7878:7878
    restart: always 

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
   # networks:
   #   - t3_proxy
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DATA_PATH}/sonarr/:/config
      - ${MEDIA_PATH}:/data  # Use the MEDIA_PATH variable
    ports:
      - 8989:8989
    restart: always 

  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:latest
    container_name: sabnzbd
    environment:
      - PUID=1000
      - PGID=1000
      - TZ="America/New_York
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DATA_PATH}/sabnzbd:/config
      - ${MEDIA_PATH}:/data  # Use the MEDIA_PATH variable
      - ${MEDIA_PATH}/usenet/incomplete:/data/usenet/incomplete  # Use the MEDIA_PATH variable to incomplete
    ports:
      - 8080:8080
    restart: always 

  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
 #   networks:
 #     - t3_proxy
    environment:
      - LOG_LEVEL=debug
      - TZ=$TZ
    ports:
      - 5055:5055
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DATA_PATH}/jellyseerr/:/app/config
    restart: always 
    
  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
 #   networks:
 #     - t3_proxy
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DATA_PATH}/jellyfin:/config
      - ${MEDIA_PATH}/media:/data/media  # Use the MEDIA_PATH variable
      - ${MEDIA_PATH}/media/xxx:/data/media/xxx  # Use the MEDIA_PATH variable
    ports:
      - 8096:8096
    restart: always 
    
  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
 #   networks:
 #     - t3_proxy
    environment:
      - /etc/localtime:/etc/localtime:ro
      - LOG_LEVEL=info
      - LOG_HTML=false
      - CAPTCHA_SOLVER=none
      - TZ=$TZ
    ports:
      - 8191:8191
    restart: always 

  gluetun:
    image: qmcgaw/gluetun:latest
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    environment:
      - VPN_SERVICE_PROVIDER=privado
      - VPN_TYPE=openvpn
      - OPENVPN_USER=$OPENVPN_USER
      - OPENVPN_PASSWORD=$OPENVPN_PASSWORD
      - SERVER_COUNTRIES=$SERVER_COUNTRIES
      - TZ=$TZ
      - HTTP_CONTROL_SERVER_ADDRESS=:8000
      - HTTP_CONTROL_SERVER_LOG=on
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DATA_PATH}/gluetun:/config
    ports:
#      - 6080:6080/tcp
#      - 6881;6881
#      - 6881:6881/udp
#      - 8005:8000
      - 8888:8888/tcp # HTTP proxy
      - 8388:8388/tcp # Shadowsocks
      - 8388:8388/udp # Shadowsocks
      - 6080:6080 #qbittorrent
    restart: always 

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    network_mode: "service:gluetun"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
      - WEBUI_PORT=6080
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /docker/appdata/qbittorrent:/config
      - /data/torrents:/data/torrents
    depends_on:
      gluetun:
        condition: service_healthy   
    restart: always 

  readarr:
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DATA_PATH}/readarr/:/config
      - ${MEDIA_PATH}:/data  # Use the MEDIA_PATH variable
    ports:
      - 8787:8787
    restart: always

  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DATA_PATH}/lidarr:/config
      - ${MEDIA_PATH}:/data  # Use the MEDIA_PATH variable
    ports:
      - 8686:8686
    restart: always

#  unifi-controller:
#    image: lscr.io/linuxserver/unifi-controller:latest
#    container_name: unifi
#    environment:
#      - PUID=1000
#      - PGID=1000
#      - TZ=America/New_York
#      - MEM_LIMIT=1024 #optional
#      - MEM_STARTUP=1024 #optional
#    volumes:
#      - ${DATA_PATH}/unifi:/config
#    ports:
#      - 5443:8443
#      - 2478:3478/udp
#      - 10001:10001/udp
#      - 5080:8080
#      - 1900:1900/udp #optional
#      - 8843:8843 #optional
#      - 8880:8880 #optional
#      - 6789:6789 #optional
#      - 5514:5514/udp #optional
#    restart: unless-stopped

  heimdall:
    image: lscr.io/linuxserver/heimdall:latest
    container_name: heimdall
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
    volumes:
      - /docker/appdata/heimdall:/config
    ports:
      - 84:80
      - 4443:443
    restart: unless-stopped

  autoheal:
    restart: always
    image: willfarrell/autoheal
    environment:
      - AUTOHEAL_CONTAINER_LABEL=all
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
    env_file: .env


#networks:
#  t3_proxy:
#    name: t3_proxy
#    ipam:
#      driver: default
#      config:
#        - subnet: "192.168.5.0/24"
#WebUI\HostHeaderValidation=false
